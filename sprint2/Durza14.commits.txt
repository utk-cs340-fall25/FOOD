970561d8 (Durza14 2025-10-02 23:07:29 -0400   1) #include <QApplication>
970561d8 (Durza14 2025-10-02 23:07:29 -0400   2) #include <QWidget>
970561d8 (Durza14 2025-10-02 23:07:29 -0400   3) #include <QVBoxLayout>
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400   4) #include <QHBoxLayout>
970561d8 (Durza14 2025-10-02 23:07:29 -0400   5) #include <QComboBox>
970561d8 (Durza14 2025-10-02 23:07:29 -0400   6) #include <QGroupBox>
970561d8 (Durza14 2025-10-02 23:07:29 -0400   7) #include <QCheckBox>
970561d8 (Durza14 2025-10-02 23:07:29 -0400   8) #include <QLabel>
970561d8 (Durza14 2025-10-02 23:07:29 -0400   9) #include <QListWidget>
970561d8 (Durza14 2025-10-02 23:07:29 -0400  10) #include <QStringList>
970561d8 (Durza14 2025-10-02 23:07:29 -0400  11) #include <QSet>
970561d8 (Durza14 2025-10-02 23:07:29 -0400  12) #include <QVector>
970561d8 (Durza14 2025-10-02 23:07:29 -0400  13) #include <QMap>
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400  14) #include <QPushButton>
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400  15) #include <QMessageBox>
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400  16) #include <QLineEdit>
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400  17) #include <QMenu>
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400  18) #include <QAction>
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400  19) #include <QDateTime>
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400  20) #include <QStatusBar>
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400  21) 
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400  22) // Priority levels for shopping list items
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400  23) enum Priority { LOW, MEDIUM, HIGH };
970561d8 (Durza14 2025-10-02 23:07:29 -0400  24) 
970561d8 (Durza14 2025-10-02 23:07:29 -0400  25) struct Recipe {
970561d8 (Durza14 2025-10-02 23:07:29 -0400  26)     QString name;
970561d8 (Durza14 2025-10-02 23:07:29 -0400  27)     QStringList ingredients;
970561d8 (Durza14 2025-10-02 23:07:29 -0400  28) };
970561d8 (Durza14 2025-10-02 23:07:29 -0400  29) 
970561d8 (Durza14 2025-10-02 23:07:29 -0400  30) class ShoppingListWidget : public QWidget {
970561d8 (Durza14 2025-10-02 23:07:29 -0400  31)     Q_OBJECT
970561d8 (Durza14 2025-10-02 23:07:29 -0400  32) public:
970561d8 (Durza14 2025-10-02 23:07:29 -0400  33)     ShoppingListWidget(QWidget *parent = nullptr) : QWidget(parent) {
970561d8 (Durza14 2025-10-02 23:07:29 -0400  34)         // Hardcoded recipes
970561d8 (Durza14 2025-10-02 23:07:29 -0400  35)         recipes.append({"Pasta", {"pasta", "tomato sauce", "cheese", "basil"}});
970561d8 (Durza14 2025-10-02 23:07:29 -0400  36)         recipes.append({"Omelette", {"eggs", "cheese", "milk", "butter"}});
970561d8 (Durza14 2025-10-02 23:07:29 -0400  37)         recipes.append({"Salad", {"lettuce", "tomato", "cucumber", "olive oil"}});
970561d8 (Durza14 2025-10-02 23:07:29 -0400  38) 
970561d8 (Durza14 2025-10-02 23:07:29 -0400  39)         QVBoxLayout *mainLayout = new QVBoxLayout(this);
970561d8 (Durza14 2025-10-02 23:07:29 -0400  40) 
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400  41)         // Date and time display
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400  42)         QDateTime currentTime = QDateTime::currentDateTime();
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400  43)         QLabel *dateTimeLabel = new QLabel("Shopping List - " + currentTime.toString("yyyy-MM-dd"));
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400  44)         dateTimeLabel->setAlignment(Qt::AlignCenter);
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400  45)         mainLayout->addWidget(dateTimeLabel);
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400  46) 
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400  47)         // Recipe selection section
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400  48)         QHBoxLayout *recipeSelectionLayout = new QHBoxLayout();
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400  49)         QLabel *recipeLabel = new QLabel("Select Recipe:");
970561d8 (Durza14 2025-10-02 23:07:29 -0400  50)         recipeBox = new QComboBox();
970561d8 (Durza14 2025-10-02 23:07:29 -0400  51)         for (const Recipe &r : recipes)
970561d8 (Durza14 2025-10-02 23:07:29 -0400  52)             recipeBox->addItem(r.name);
970561d8 (Durza14 2025-10-02 23:07:29 -0400  53) 
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400  54)         addButton = new QPushButton("Add to Menu");
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400  55) 
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400  56)         recipeSelectionLayout->addWidget(recipeLabel);
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400  57)         recipeSelectionLayout->addWidget(recipeBox);
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400  58)         recipeSelectionLayout->addWidget(addButton);
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400  59) 
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400  60)         mainLayout->addLayout(recipeSelectionLayout);
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400  61) 
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400  62)         // Selected recipes section
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400  63)         selectedRecipesGroup = new QGroupBox("Selected Recipes");
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400  64)         selectedRecipesLayout = new QVBoxLayout();
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400  65)         selectedRecipesGroup->setLayout(selectedRecipesLayout);
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400  66)         mainLayout->addWidget(selectedRecipesGroup);
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400  67) 
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400  68)         // Ingredients you have section
970561d8 (Durza14 2025-10-02 23:07:29 -0400  69)         ingredientGroup = new QGroupBox("Ingredients you have");
970561d8 (Durza14 2025-10-02 23:07:29 -0400  70)         ingLayout = new QVBoxLayout();
970561d8 (Durza14 2025-10-02 23:07:29 -0400  71)         ingredientGroup->setLayout(ingLayout);
970561d8 (Durza14 2025-10-02 23:07:29 -0400  72)         mainLayout->addWidget(ingredientGroup);
970561d8 (Durza14 2025-10-02 23:07:29 -0400  73) 
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400  74)         // Shopping list section
970561d8 (Durza14 2025-10-02 23:07:29 -0400  75)         mainLayout->addWidget(new QLabel("Missing ingredients (shopping list):"));
970561d8 (Durza14 2025-10-02 23:07:29 -0400  76)         shoppingList = new QListWidget();
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400  77)         shoppingList->setContextMenuPolicy(Qt::CustomContextMenu);
970561d8 (Durza14 2025-10-02 23:07:29 -0400  78)         mainLayout->addWidget(shoppingList);
970561d8 (Durza14 2025-10-02 23:07:29 -0400  79) 
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400  80)         // Custom item section
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400  81)         QGroupBox *customItemGroup = new QGroupBox("Add Custom Item");
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400  82)         QHBoxLayout *customItemLayout = new QHBoxLayout();
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400  83)         customItemInput = new QLineEdit();
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400  84)         QPushButton *addCustomItemButton = new QPushButton("Add");
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400  85)         QComboBox *priorityComboBox = new QComboBox();
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400  86) 
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400  87)         priorityComboBox->addItem("Low Priority", LOW);
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400  88)         priorityComboBox->addItem("Medium Priority", MEDIUM);
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400  89)         priorityComboBox->addItem("High Priority", HIGH);
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400  90)         customItemPrioritySelector = priorityComboBox;
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400  91) 
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400  92)         customItemLayout->addWidget(customItemInput);
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400  93)         customItemLayout->addWidget(priorityComboBox);
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400  94)         customItemLayout->addWidget(addCustomItemButton);
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400  95)         customItemGroup->setLayout(customItemLayout);
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400  96)         mainLayout->addWidget(customItemGroup);
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400  97) 
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400  98)         // Clear button
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400  99)         clearAllButton = new QPushButton("Clear All");
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 100)         mainLayout->addWidget(clearAllButton);
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 101) 
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 102)         // Status bar for help text
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 103)         statusBar = new QStatusBar();
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 104)         statusBar->showMessage("Right-click on shopping list items to set priority");
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 105)         mainLayout->addWidget(statusBar);
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 106) 
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 107)         // Connect signals/slots
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 108)         connect(addButton, &QPushButton::clicked, this, &ShoppingListWidget::addRecipeToMenu);
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 109)         connect(clearAllButton, &QPushButton::clicked, this, &ShoppingListWidget::clearAll);
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 110)         connect(addCustomItemButton, &QPushButton::clicked, this, &ShoppingListWidget::addCustomItem);
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 111)         connect(shoppingList, &QListWidget::customContextMenuRequested,
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 112)                 this, &ShoppingListWidget::showItemContextMenu);
970561d8 (Durza14 2025-10-02 23:07:29 -0400 113) 
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 114)         // Initial update of ingredients display
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 115)         updateIngredientsDisplay();
970561d8 (Durza14 2025-10-02 23:07:29 -0400 116)     }
970561d8 (Durza14 2025-10-02 23:07:29 -0400 117) 
970561d8 (Durza14 2025-10-02 23:07:29 -0400 118) private slots:
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 119)     void addRecipeToMenu() {
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 120)         int index = recipeBox->currentIndex();
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 121)         if (index < 0 || index >= recipes.size()) return;
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 122) 
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 123)         // Check if the recipe is already added
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 124)         QString recipeName = recipes[index].name;
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 125)         if (selectedRecipes.contains(recipeName)) {
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 126)             QMessageBox::information(this, "Already Added",
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 127)                                     "This recipe is already in your menu.");
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 128)             return;
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 129)         }
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 130) 
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 131)         // Add recipe to selected list
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 132)         selectedRecipes.insert(recipeName);
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 133) 
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 134)         // Add checkbox to selected recipes section
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 135)         QCheckBox *recipeCheckBox = new QCheckBox(recipeName);
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 136)         selectedRecipesLayout->addWidget(recipeCheckBox);
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 137)         recipeCheckBoxes[recipeName] = recipeCheckBox;
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 138) 
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 139)         // Connect checkbox signal to update ingredients when toggled
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 140)         connect(recipeCheckBox, &QCheckBox::stateChanged, this, &ShoppingListWidget::updateIngredientsDisplay);
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 141) 
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 142)         // Update the display with the new recipe
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 143)         updateIngredientsDisplay();
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 144)     }
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 145) 
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 146)     void updateIngredientsDisplay() {
970561d8 (Durza14 2025-10-02 23:07:29 -0400 147)         // Clear previous checkboxes
970561d8 (Durza14 2025-10-02 23:07:29 -0400 148)         QLayoutItem *child;
970561d8 (Durza14 2025-10-02 23:07:29 -0400 149)         while ((child = ingLayout->takeAt(0)) != nullptr) {
970561d8 (Durza14 2025-10-02 23:07:29 -0400 150)             QWidget *w = child->widget();
970561d8 (Durza14 2025-10-02 23:07:29 -0400 151)             if (w) {
970561d8 (Durza14 2025-10-02 23:07:29 -0400 152)                 w->deleteLater();
970561d8 (Durza14 2025-10-02 23:07:29 -0400 153)             }
970561d8 (Durza14 2025-10-02 23:07:29 -0400 154)             delete child;
970561d8 (Durza14 2025-10-02 23:07:29 -0400 155)         }
970561d8 (Durza14 2025-10-02 23:07:29 -0400 156)         checkboxes.clear();
970561d8 (Durza14 2025-10-02 23:07:29 -0400 157) 
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 158)         // Create a set of all ingredients from selected recipes
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 159)         QSet<QString> allIngredients;
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 160)         for (const QString &recipeName : selectedRecipes) {
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 161)             // Only include ingredients for checked recipes
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 162)             QCheckBox *recipeCheckBox = recipeCheckBoxes.value(recipeName);
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 163)             if (recipeCheckBox && recipeCheckBox->isChecked()) {
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 164)                 for (const Recipe &r : recipes) {
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 165)                     if (r.name == recipeName) {
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 166)                         for (const QString &ing : r.ingredients) {
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 167)                             allIngredients.insert(ing);
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 168)                         }
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 169)                         break;
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 170)                     }
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 171)                 }
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 172)             }
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 173)         }
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 174) 
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 175)         // Create checkboxes for all unique ingredients
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 176)         for (const QString &ing : allIngredients) {
970561d8 (Durza14 2025-10-02 23:07:29 -0400 177)             QCheckBox *cb = new QCheckBox(ing);
970561d8 (Durza14 2025-10-02 23:07:29 -0400 178)             ingLayout->addWidget(cb);
970561d8 (Durza14 2025-10-02 23:07:29 -0400 179)             checkboxes[ing] = cb;
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 180)             connect(cb, &QCheckBox::stateChanged, this, &ShoppingListWidget::updateShoppingList);
970561d8 (Durza14 2025-10-02 23:07:29 -0400 181)         }
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 182) 
970561d8 (Durza14 2025-10-02 23:07:29 -0400 183)         updateShoppingList();
970561d8 (Durza14 2025-10-02 23:07:29 -0400 184)     }
970561d8 (Durza14 2025-10-02 23:07:29 -0400 185) 
970561d8 (Durza14 2025-10-02 23:07:29 -0400 186)     void updateShoppingList() {
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 187)         // Store current priorities before clearing the list
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 188)         QMap<QString, Priority> currentPriorities;
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 189)         for (int i = 0; i < shoppingList->count(); i++) {
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 190)             QListWidgetItem* item = shoppingList->item(i);
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 191)             QString itemText = item->text();
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 192)             if (itemPriorities.contains(itemText)) {
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 193)                 currentPriorities[itemText] = itemPriorities[itemText];
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 194)             }
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 195)         }
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 196) 
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 197)         // Create a set of all ingredients from selected recipes
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 198)         QSet<QString> requiredIngredients;
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 199)         for (const QString &recipeName : selectedRecipes) {
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 200)             // Only include ingredients for checked recipes
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 201)             QCheckBox *recipeCheckBox = recipeCheckBoxes.value(recipeName);
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 202)             if (recipeCheckBox && recipeCheckBox->isChecked()) {
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 203)                 for (const Recipe &r : recipes) {
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 204)                     if (r.name == recipeName) {
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 205)                         for (const QString &ing : r.ingredients) {
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 206)                             requiredIngredients.insert(ing);
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 207)                         }
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 208)                         break;
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 209)                     }
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 210)                 }
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 211)             }
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 212)         }
970561d8 (Durza14 2025-10-02 23:07:29 -0400 213) 
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 214)         // Check which ingredients user has
970561d8 (Durza14 2025-10-02 23:07:29 -0400 215)         QSet<QString> inventory;
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 216)         for (const QString &ing : requiredIngredients) {
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 217)             if (checkboxes.contains(ing) && checkboxes[ing]->isChecked())
970561d8 (Durza14 2025-10-02 23:07:29 -0400 218)                 inventory.insert(ing);
970561d8 (Durza14 2025-10-02 23:07:29 -0400 219)         }
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 220) 
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 221)         // Update the shopping list
970561d8 (Durza14 2025-10-02 23:07:29 -0400 222)         shoppingList->clear();
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 223) 
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 224)         // First, add recipe ingredients
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 225)         for (const QString &ing : requiredIngredients) {
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 226)             if (!inventory.contains(ing)) {
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 227)                 QListWidgetItem* item = new QListWidgetItem(ing);
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 228)                 shoppingList->addItem(item);
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 229) 
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 230)                 // Restore or set priority
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 231)                 if (currentPriorities.contains(ing)) {
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 232)                     itemPriorities[ing] = currentPriorities[ing];
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 233)                 } else if (!itemPriorities.contains(ing)) {
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 234)                     itemPriorities[ing] = LOW; // Default priority
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 235)                 }
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 236)                 updateItemDisplay(item);
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 237)             }
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 238)         }
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 239) 
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 240)         // Then, add custom items (keep them in the list)
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 241)         for (const QString &customItem : customItems) {
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 242)             QListWidgetItem* item = new QListWidgetItem(customItem);
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 243)             shoppingList->addItem(item);
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 244)             updateItemDisplay(item);
970561d8 (Durza14 2025-10-02 23:07:29 -0400 245)         }
970561d8 (Durza14 2025-10-02 23:07:29 -0400 246)     }
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 247) 
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 248)     void addCustomItem() {
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 249)         QString item = customItemInput->text().trimmed();
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 250)         if (!item.isEmpty()) {
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 251)             // Check if item already exists
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 252)             bool alreadyExists = false;
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 253)             for (int i = 0; i < shoppingList->count(); i++) {
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 254)                 if (shoppingList->item(i)->text() == item) {
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 255)                     alreadyExists = true;
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 256)                     break;
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 257)                 }
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 258)             }
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 259) 
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 260)             if (!alreadyExists) {
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 261)                 // Get selected priority
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 262)                 Priority priority = static_cast<Priority>(
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 263)                     customItemPrioritySelector->currentData().toInt());
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 264) 
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 265)                 // Add item to our custom items list
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 266)                 customItems.insert(item);
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 267) 
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 268)                 // Set the priority
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 269)                 itemPriorities[item] = priority;
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 270) 
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 271)                 // Add to the shopping list
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 272)                 QListWidgetItem* newItem = new QListWidgetItem(item);
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 273)                 shoppingList->addItem(newItem);
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 274)                 updateItemDisplay(newItem);
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 275) 
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 276)                 // Clear the input field
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 277)                 customItemInput->clear();
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 278) 
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 279)                 statusBar->showMessage("Custom item added: " + item, 2000);
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 280)             } else {
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 281)                 statusBar->showMessage("Item already in list", 2000);
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 282)             }
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 283)         }
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 284)     }
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 285) 
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 286)     void showItemContextMenu(const QPoint &pos) {
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 287)         QListWidgetItem *item = shoppingList->itemAt(pos);
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 288)         if (!item)
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 289)             return;
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 290) 
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 291)         QMenu contextMenu(tr("Item Priority"), this);
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 292) 
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 293)         QAction *lowAction = new QAction(tr("Low Priority"), this);
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 294)         QAction *mediumAction = new QAction(tr("Medium Priority"), this);
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 295)         QAction *highAction = new QAction(tr("High Priority"), this);
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 296) 
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 297)         connect(lowAction, &QAction::triggered, [this, item]() {
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 298)             setPriority(item, LOW);
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 299)         });
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 300) 
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 301)         connect(mediumAction, &QAction::triggered, [this, item]() {
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 302)             setPriority(item, MEDIUM);
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 303)         });
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 304) 
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 305)         connect(highAction, &QAction::triggered, [this, item]() {
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 306)             setPriority(item, HIGH);
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 307)         });
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 308) 
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 309)         contextMenu.addAction(lowAction);
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 310)         contextMenu.addAction(mediumAction);
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 311)         contextMenu.addAction(highAction);
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 312) 
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 313)         contextMenu.exec(shoppingList->viewport()->mapToGlobal(pos));
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 314)     }
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 315) 
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 316)     void setPriority(QListWidgetItem *item, Priority priority) {
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 317)         if (!item) return;
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 318) 
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 319)         QString itemText = item->text();
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 320)         itemPriorities[itemText] = priority;
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 321)         updateItemDisplay(item);
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 322) 
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 323)         statusBar->showMessage("Priority updated for: " + itemText, 2000);
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 324)     }
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 325) 
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 326)     void updateItemDisplay(QListWidgetItem* item) {
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 327)         QString name = item->text();
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 328)         if (itemPriorities.contains(name)) {
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 329)             switch(itemPriorities[name]) {
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 330)                 case HIGH:
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 331)                     item->setForeground(Qt::red);
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 332)                     item->setIcon(QIcon::fromTheme("emblem-important"));
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 333)                     break;
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 334)                 case MEDIUM:
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 335)                     item->setForeground(QColor(255, 165, 0)); // Orange
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 336)                     break;
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 337)                 case LOW:
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 338)                 default:
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 339)                     item->setForeground(Qt::black);
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 340)                     break;
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 341)             }
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 342)         }
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 343)     }
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 344) 
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 345)     void clearAll() {
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 346)         // Clear selected recipes
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 347)         selectedRecipes.clear();
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 348) 
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 349)         // Clear custom items
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 350)         customItems.clear();
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 351) 
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 352)         // Optionally clear item priorities or keep them for next time
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 353)         // itemPriorities.clear();
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 354) 
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 355)         // Remove all recipe checkboxes
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 356)         QLayoutItem *child;
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 357)         while ((child = selectedRecipesLayout->takeAt(0)) != nullptr) {
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 358)             QWidget *w = child->widget();
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 359)             if (w) {
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 360)                 w->deleteLater();
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 361)             }
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 362)             delete child;
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 363)         }
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 364)         recipeCheckBoxes.clear();
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 365) 
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 366)         // Clear ingredients and shopping list
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 367)         updateIngredientsDisplay();
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 368) 
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 369)         statusBar->showMessage("All items cleared", 2000);
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 370)     }
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 371) 
970561d8 (Durza14 2025-10-02 23:07:29 -0400 372) private:
970561d8 (Durza14 2025-10-02 23:07:29 -0400 373)     QVector<Recipe> recipes;
970561d8 (Durza14 2025-10-02 23:07:29 -0400 374)     QComboBox *recipeBox;
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 375)     QPushButton *addButton;
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 376)     QPushButton *clearAllButton;
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 377)     QGroupBox *selectedRecipesGroup;
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 378)     QVBoxLayout *selectedRecipesLayout;
970561d8 (Durza14 2025-10-02 23:07:29 -0400 379)     QGroupBox *ingredientGroup;
970561d8 (Durza14 2025-10-02 23:07:29 -0400 380)     QVBoxLayout *ingLayout;
970561d8 (Durza14 2025-10-02 23:07:29 -0400 381)     QMap<QString, QCheckBox*> checkboxes;
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 382)     QMap<QString, QCheckBox*> recipeCheckBoxes;
970561d8 (Durza14 2025-10-02 23:07:29 -0400 383)     QListWidget *shoppingList;
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 384)     QSet<QString> selectedRecipes;
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 385)     QSet<QString> customItems;
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 386)     QMap<QString, Priority> itemPriorities;
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 387)     QLineEdit *customItemInput;
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 388)     QComboBox *customItemPrioritySelector;
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 389)     QStatusBar *statusBar;
970561d8 (Durza14 2025-10-02 23:07:29 -0400 390) };
970561d8 (Durza14 2025-10-02 23:07:29 -0400 391) 
970561d8 (Durza14 2025-10-02 23:07:29 -0400 392) #include "main.moc"
970561d8 (Durza14 2025-10-02 23:07:29 -0400 393) 
970561d8 (Durza14 2025-10-02 23:07:29 -0400 394) int main(int argc, char *argv[])
970561d8 (Durza14 2025-10-02 23:07:29 -0400 395) {
970561d8 (Durza14 2025-10-02 23:07:29 -0400 396)     QApplication app(argc, argv);
970561d8 (Durza14 2025-10-02 23:07:29 -0400 397)     ShoppingListWidget w;
970561d8 (Durza14 2025-10-02 23:07:29 -0400 398)     w.setWindowTitle("Recipe Shopping List");
8e0e0295 (Durza14 2025-10-16 21:45:06 -0400 399)     w.resize(500, 600);
970561d8 (Durza14 2025-10-02 23:07:29 -0400 400)     w.show();
970561d8 (Durza14 2025-10-02 23:07:29 -0400 401)     return app.exec();
970561d8 (Durza14 2025-10-02 23:07:29 -0400 402) }
