970561d8 (Durza14 2025-10-02 23:07:29 -0400   1) #include <QApplication>
970561d8 (Durza14 2025-10-02 23:07:29 -0400   2) #include <QWidget>
970561d8 (Durza14 2025-10-02 23:07:29 -0400   3) #include <QVBoxLayout>
970561d8 (Durza14 2025-10-02 23:07:29 -0400   4) #include <QComboBox>
970561d8 (Durza14 2025-10-02 23:07:29 -0400   5) #include <QGroupBox>
970561d8 (Durza14 2025-10-02 23:07:29 -0400   6) #include <QCheckBox>
970561d8 (Durza14 2025-10-02 23:07:29 -0400   7) #include <QLabel>
970561d8 (Durza14 2025-10-02 23:07:29 -0400   8) #include <QListWidget>
970561d8 (Durza14 2025-10-02 23:07:29 -0400   9) #include <QStringList>
970561d8 (Durza14 2025-10-02 23:07:29 -0400  10) #include <QSet>
970561d8 (Durza14 2025-10-02 23:07:29 -0400  11) #include <QVector>
970561d8 (Durza14 2025-10-02 23:07:29 -0400  12) #include <QMap>
970561d8 (Durza14 2025-10-02 23:07:29 -0400  13) 
970561d8 (Durza14 2025-10-02 23:07:29 -0400  14) struct Recipe {
970561d8 (Durza14 2025-10-02 23:07:29 -0400  15)     QString name;
970561d8 (Durza14 2025-10-02 23:07:29 -0400  16)     QStringList ingredients;
970561d8 (Durza14 2025-10-02 23:07:29 -0400  17) };
970561d8 (Durza14 2025-10-02 23:07:29 -0400  18) 
970561d8 (Durza14 2025-10-02 23:07:29 -0400  19) class ShoppingListWidget : public QWidget {
970561d8 (Durza14 2025-10-02 23:07:29 -0400  20)     Q_OBJECT
970561d8 (Durza14 2025-10-02 23:07:29 -0400  21) public:
970561d8 (Durza14 2025-10-02 23:07:29 -0400  22)     ShoppingListWidget(QWidget *parent = nullptr) : QWidget(parent) {
970561d8 (Durza14 2025-10-02 23:07:29 -0400  23)         // Hardcoded recipes
970561d8 (Durza14 2025-10-02 23:07:29 -0400  24)         recipes.append({"Pasta", {"pasta", "tomato sauce", "cheese", "basil"}});
970561d8 (Durza14 2025-10-02 23:07:29 -0400  25)         recipes.append({"Omelette", {"eggs", "cheese", "milk", "butter"}});
970561d8 (Durza14 2025-10-02 23:07:29 -0400  26)         recipes.append({"Salad", {"lettuce", "tomato", "cucumber", "olive oil"}});
970561d8 (Durza14 2025-10-02 23:07:29 -0400  27) 
970561d8 (Durza14 2025-10-02 23:07:29 -0400  28)         QVBoxLayout *mainLayout = new QVBoxLayout(this);
970561d8 (Durza14 2025-10-02 23:07:29 -0400  29) 
970561d8 (Durza14 2025-10-02 23:07:29 -0400  30)         recipeBox = new QComboBox();
970561d8 (Durza14 2025-10-02 23:07:29 -0400  31)         for (const Recipe &r : recipes)
970561d8 (Durza14 2025-10-02 23:07:29 -0400  32)             recipeBox->addItem(r.name);
970561d8 (Durza14 2025-10-02 23:07:29 -0400  33)         mainLayout->addWidget(new QLabel("Select Recipe:"));
970561d8 (Durza14 2025-10-02 23:07:29 -0400  34)         mainLayout->addWidget(recipeBox);
970561d8 (Durza14 2025-10-02 23:07:29 -0400  35) 
970561d8 (Durza14 2025-10-02 23:07:29 -0400  36)         ingredientGroup = new QGroupBox("Ingredients you have");
970561d8 (Durza14 2025-10-02 23:07:29 -0400  37)         ingLayout = new QVBoxLayout();
970561d8 (Durza14 2025-10-02 23:07:29 -0400  38)         ingredientGroup->setLayout(ingLayout);
970561d8 (Durza14 2025-10-02 23:07:29 -0400  39)         mainLayout->addWidget(ingredientGroup);
970561d8 (Durza14 2025-10-02 23:07:29 -0400  40) 
970561d8 (Durza14 2025-10-02 23:07:29 -0400  41)         mainLayout->addWidget(new QLabel("Missing ingredients (shopping list):"));
970561d8 (Durza14 2025-10-02 23:07:29 -0400  42)         shoppingList = new QListWidget();
970561d8 (Durza14 2025-10-02 23:07:29 -0400  43)         mainLayout->addWidget(shoppingList);
970561d8 (Durza14 2025-10-02 23:07:29 -0400  44) 
970561d8 (Durza14 2025-10-02 23:07:29 -0400  45)         // Qt 5 Style SIGNAL/SLOT
970561d8 (Durza14 2025-10-02 23:07:29 -0400  46)         connect(recipeBox, SIGNAL(currentIndexChanged(int)), this, SLOT(updateIngredients(int)));
970561d8 (Durza14 2025-10-02 23:07:29 -0400  47) 
970561d8 (Durza14 2025-10-02 23:07:29 -0400  48)         updateIngredients(0);
970561d8 (Durza14 2025-10-02 23:07:29 -0400  49)     }
970561d8 (Durza14 2025-10-02 23:07:29 -0400  50) 
970561d8 (Durza14 2025-10-02 23:07:29 -0400  51) private slots:
970561d8 (Durza14 2025-10-02 23:07:29 -0400  52)     void updateIngredients(int index) {
970561d8 (Durza14 2025-10-02 23:07:29 -0400  53)         // Clear previous checkboxes
970561d8 (Durza14 2025-10-02 23:07:29 -0400  54)         QLayoutItem *child;
970561d8 (Durza14 2025-10-02 23:07:29 -0400  55)         while ((child = ingLayout->takeAt(0)) != nullptr) {
970561d8 (Durza14 2025-10-02 23:07:29 -0400  56)             QWidget *w = child->widget();
970561d8 (Durza14 2025-10-02 23:07:29 -0400  57)             if (w) {
970561d8 (Durza14 2025-10-02 23:07:29 -0400  58)                 w->deleteLater();
970561d8 (Durza14 2025-10-02 23:07:29 -0400  59)             }
970561d8 (Durza14 2025-10-02 23:07:29 -0400  60)             delete child;
970561d8 (Durza14 2025-10-02 23:07:29 -0400  61)         }
970561d8 (Durza14 2025-10-02 23:07:29 -0400  62)         checkboxes.clear();
970561d8 (Durza14 2025-10-02 23:07:29 -0400  63) 
970561d8 (Durza14 2025-10-02 23:07:29 -0400  64)         const Recipe &recipe = recipes[index];
970561d8 (Durza14 2025-10-02 23:07:29 -0400  65)         for (const QString &ing : recipe.ingredients) {
970561d8 (Durza14 2025-10-02 23:07:29 -0400  66)             QCheckBox *cb = new QCheckBox(ing);
970561d8 (Durza14 2025-10-02 23:07:29 -0400  67)             ingLayout->addWidget(cb);
970561d8 (Durza14 2025-10-02 23:07:29 -0400  68)             checkboxes[ing] = cb;
970561d8 (Durza14 2025-10-02 23:07:29 -0400  69)             connect(cb, SIGNAL(stateChanged(int)), this, SLOT(updateShoppingList()));
970561d8 (Durza14 2025-10-02 23:07:29 -0400  70)         }
970561d8 (Durza14 2025-10-02 23:07:29 -0400  71)         updateShoppingList();
970561d8 (Durza14 2025-10-02 23:07:29 -0400  72)     }
970561d8 (Durza14 2025-10-02 23:07:29 -0400  73) 
970561d8 (Durza14 2025-10-02 23:07:29 -0400  74)     void updateShoppingList() {
970561d8 (Durza14 2025-10-02 23:07:29 -0400  75)         int index = recipeBox->currentIndex();
970561d8 (Durza14 2025-10-02 23:07:29 -0400  76)         if (index < 0 || index >= recipes.size()) return;
970561d8 (Durza14 2025-10-02 23:07:29 -0400  77)         const Recipe &recipe = recipes[index];
970561d8 (Durza14 2025-10-02 23:07:29 -0400  78) 
970561d8 (Durza14 2025-10-02 23:07:29 -0400  79)         QSet<QString> inventory;
970561d8 (Durza14 2025-10-02 23:07:29 -0400  80)         for (const QString &ing : recipe.ingredients) {
970561d8 (Durza14 2025-10-02 23:07:29 -0400  81)             if (checkboxes[ing]->isChecked())
970561d8 (Durza14 2025-10-02 23:07:29 -0400  82)                 inventory.insert(ing);
970561d8 (Durza14 2025-10-02 23:07:29 -0400  83)         }
970561d8 (Durza14 2025-10-02 23:07:29 -0400  84)         shoppingList->clear();
970561d8 (Durza14 2025-10-02 23:07:29 -0400  85)         for (const QString &ing : recipe.ingredients) {
970561d8 (Durza14 2025-10-02 23:07:29 -0400  86)             if (!inventory.contains(ing))
970561d8 (Durza14 2025-10-02 23:07:29 -0400  87)                 shoppingList->addItem(ing);
970561d8 (Durza14 2025-10-02 23:07:29 -0400  88)         }
970561d8 (Durza14 2025-10-02 23:07:29 -0400  89)     }
970561d8 (Durza14 2025-10-02 23:07:29 -0400  90) private:
970561d8 (Durza14 2025-10-02 23:07:29 -0400  91)     QVector<Recipe> recipes;
970561d8 (Durza14 2025-10-02 23:07:29 -0400  92)     QComboBox *recipeBox;
970561d8 (Durza14 2025-10-02 23:07:29 -0400  93)     QGroupBox *ingredientGroup;
970561d8 (Durza14 2025-10-02 23:07:29 -0400  94)     QVBoxLayout *ingLayout;
970561d8 (Durza14 2025-10-02 23:07:29 -0400  95)     QMap<QString, QCheckBox*> checkboxes;
970561d8 (Durza14 2025-10-02 23:07:29 -0400  96)     QListWidget *shoppingList;
970561d8 (Durza14 2025-10-02 23:07:29 -0400  97) };
970561d8 (Durza14 2025-10-02 23:07:29 -0400  98) 
970561d8 (Durza14 2025-10-02 23:07:29 -0400  99) #include "main.moc"
970561d8 (Durza14 2025-10-02 23:07:29 -0400 100) 
970561d8 (Durza14 2025-10-02 23:07:29 -0400 101) int main(int argc, char *argv[])
970561d8 (Durza14 2025-10-02 23:07:29 -0400 102) {
970561d8 (Durza14 2025-10-02 23:07:29 -0400 103)     QApplication app(argc, argv);
970561d8 (Durza14 2025-10-02 23:07:29 -0400 104)     ShoppingListWidget w;
970561d8 (Durza14 2025-10-02 23:07:29 -0400 105)     w.setWindowTitle("Recipe Shopping List");
970561d8 (Durza14 2025-10-02 23:07:29 -0400 106)     w.resize(400, 400);
970561d8 (Durza14 2025-10-02 23:07:29 -0400 107)     w.show();
970561d8 (Durza14 2025-10-02 23:07:29 -0400 108)     return app.exec();
970561d8 (Durza14 2025-10-02 23:07:29 -0400 109) }
